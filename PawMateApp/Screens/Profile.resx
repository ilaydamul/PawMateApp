<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="userImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABMxJREFUeF7t3EmoHUUUgOHnPBuJosRZQ0TjEHeK80ZRURSjQpKFw8pkIYg7l2bh
        LC5ERXQjgnGeZ0FBEBWMoqhRFHEe4oTiTNT/Jy8QnifPvi+3u09194Fv897t7qq+faurTlX3RILYBHNx
        GpbjfryD1fh90reTf3sIfsbP7g237W3sgKNwC97Gz/inoh/wJtz2WOyI3sTmOBr3YZSTtiG/4BH4ZWyG
        TsceuBFfIzoZG+MrXA2P0cmf9qF4Hn8hOgHj4L5fwIHoVJyJDxBVug5fwmMWH1vA9u47RBWt06c4EUWH
        DXuTV95UH8IyFBk25i/hb0SVa4LHfgWWpajYEtfhT0QVa5JluBY2J8XEyfgNUYXa4GjmBBQRjgoeRVSR
        NlmmWUgfZ+BHRJVok8O/05E+HkCbN47p3IXU4U/kJ0SFz8BfRurEw7mICp7J2UgZm+J6RIXO5AakDH8a
        TyAqdCaPIeXPeB+8hqjQmbyKvZAuTCG9j6jQmVjGA5AuDoMZkKjQmXyCQ5AuTJiWcAIto192ujgIpo+i
        Qmdiei1lxtqbyEpEhc7kDeyLdLETnkFU6Eyexs5IF3aknaeNCp3JTUg7/XkhokJnsgRpw9R5hiz0hli2
        OUgbTmhnTKau8yTST7pfAFPoUQXa5BKQ85E+dsGLiCrRJlcsWLYi4ixkagsty3koJrbHvciQ2rcM98Ay
        FRUOl1wUGVWqSW9hPoqMxXA2LKpYE75H2hR+lXB0cg68A0YVrJPH9NiWoehwRepFcJ1zVNE6fIZL0ZkV
        q14F3pmbWKn1ERai+CsvioPheuY62kU77ytgtrnTq/e3hX0yU+vRiRiV3ZSP4QiomI7yOMJ+2SI8Dp8J
        iU7OdGxTn4LDs+3Qy/Cn5nKQI7EMD2IVvoAnyG6IPMH+7T3YBFyMIzAbQ0wJ79o+hbQALs/V4ZN/839D
        DDHEEKWHnVzvnM6OmWLfE65XcbqxCj/rNm7rbKD76mTHef2wgvvDrsuV8GHDl2F/0DvtKIvS/azbuK2P
        Mbivq2CXxsxLZ4ZwXhlW6DK4KsoHAh3k15EndJ8mTr+BGXHHwt69i8sDGl5t9tPuxOeIKtwEj21i93gU
        8RO3kKfARYwZstHrWJZn4Sr9lH1JRxTzYDtk25Tp5K3PEY2rJ8yWp0k42GCfigzp+6osq+9daP1qtIH2
        JRBtpu1nykcevLntilbCb+82tJGuHxfv2rej8QcR98PdiApVIu/Uu6GRMP3kt7YGUWFK5JXo+2oc1dQa
        ZpNvRp0vjmiLdboVtSVnbfMuxx+ICtAFXomXYGuMPU7CuOYxMjMTbl3HGjawTtxEB+wi6zq27o1tgn29
        6EBddg3GktU5DnW8qik7X95zDDYq7GC6NCzr2LZO1tnlyr6BZMbhjNhM5my7whvKjF/cY9t3B6Id94nn
        wP7vyGH63exutNM+8Rz4hs2RYymiHfaRy/NGiq3wHKKd9ZHrd0b6GbtErISnz5viY7wuzascbS3Lzcq1
        h56TynEF+tj3m46jscqR+Xm3tjyMyjG0f//1LiqFc7uZ3v2Xxa+oNBXqW32iHQzWvn39f2N3RBsPKj6s
        7bAl2nhQcUi3DXxYJdpBn7myrPJciW8Bd7X80Bdcew5eh682nRITE/8CGN7nc5UpuMgAAAAASUVORK5C
        YII=
</value>
  </data>
</root>