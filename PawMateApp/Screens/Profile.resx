<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="userImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>