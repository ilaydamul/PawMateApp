<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_closePatient.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABEBJREFUeF7t3d2O1DYYgGHfCyoqp5S2F41QKddV2kqF41ZGtRCeDIln8uPPfh7J
        JyvHIzl+d5M92E0JAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4DivUkofUkqfU0qfUkrvU0ov60mE
        5f4+IW/e3ymlf6vxV0rpTT2ZcH69c3//FMk2+TtLvXkiGcO9OMp4V1/Arfxjt944kcS3Fke5t6zIz6T1
        xtVDJLFsiSOP/JjFivzCVm/c0hBJDFvjyONtfTG38otaPvz15i0NkfStJY6PKaUX9QIs+1kk4bXEkR+t
        XtcL8H0iiUscJxFJPOI4mUjiEMdFRNI/cVxMJP0SRydE0h9xdEYk/RBHp1ojyfPZlzg6J5LriCMIkZxP
        HMGI5DziCEokxxNHcCI5jjgGkQ/91hspkm3EMRiR7EccgxLJ88QxOJE8ThyTEEk7cUxGJNuJY1IiWSeO
        yYnkPnHwRUsked4MkYiDb4jkK3GwSCTiYMXMkYiDTWaMRBw0mSkScfCQGSIRB0/5peEARYukNY6f6gUg
        GzEScbCrkSIRB4cYIRJxcKjIkYiDU0SMRBycKlIk4uASESIRB5dqjSTPP4s46EKPkYiDrvQUiTjoUg+R
        iIOuXRmJOAjhikjEQSgtB/bZSFo+K/9lFnHQhZaD+2gkLZ8hDrrTcoBbI2lZWxx0q+Ugb42kZU1x0L2W
        A70WScta4iCMloN9L5KWNcRBOC0HvI6k5VpxEFbLQS+RtFwjDsJrOfB53ta54mAYLZFsGeJgOHtFIg6G
        9Wwk4mB4j0YiDqbRGok4mMojgbypF4ERtcYhEqbxaBwiYXjPxiEShrVXHGWIhGG0xJEPfh7115eGSAiv
        NY78q9x86EXC8B6JoxAJQ3smjkIkDGmPOAqRMJQ94yhEwhCOiKMQCaEdGUchEkI6I45CJIRyZhyFSAjh
        ijgKkdC1K+MoREKXeoijEAld6SmOQiR0oSWOs/+zk0i4VM9xFCLhEhHiKETCqSLFUYiEU0SMoxAJh4oc
        RyESDjFCHIVI2NVIcRQiYRcjxlGIhKeMHEchEh4yQxyFSGgyUxyFSNhkxjgKkfBdM8dRiIRF4vhKJHyj
        NY7X9QIDEglfiOM+kUxOHOtEMilxbCeSyYijnUgmIY7HiWRw4nieSAYljv2IZDDi2J9IBiGO44gkOHEc
        TyRBieM8IglGHOcTSRDiuI5IOieO64mkU+Loh0g6I47+iKQT4uiXSC4mjv6J5CLiiEMkJxNHPCI5iTji
        EsnBxBGfSA7yShzDaI3kZb0Atz4sbN7SEEcMLZG8qy/m1ueFjauHOGLZGkmew4pPCxsnjvi2RJLvLSve
        L2ycOMawFsnb+gJu5Re1pU38KI4h3Ivkj5TSi3oyy35MKf3+/+PWPyml31JKP9STCMv9BQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAE71H1n2r83MxkbwAAAAAElFTkSuQmCC
</value>
  </data>
</root>