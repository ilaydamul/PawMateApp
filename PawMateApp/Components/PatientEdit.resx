<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_closePatient.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABBJJREFUeF7t3cGO1TYYhuG5F1QEW6D0ohEqcF3QViqsWxvJAg4ZEp8kjn/7eaRv
        RaSRnLwzObNgHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABO9DztQ9qXtM9p79KepjEG93eHfHj/
        pP13s7/TXqUR2x9pS/f3rzSRbJC/s9weXplIYnssjrK3aazIP3aXDq9MJDGtxZGX7y0r8jvp0uF9P5HE
        siWOvPyaxYr8gW3p8G4nkhi2xpH3Jo0V+YNafviXDvB2IulbTRyf0p6kscHvaSKJrSaO/Gr1Io0KIolL
        HI2IJB5xNCaSOMRxEZH0TxwXE0m/xNEJkfRHHJ0RST/E0anaSPL1HEscnRPJdcQRhEjaE0cwImlHHEGJ
        5HziCE4k5xHHIPJDv/VGimQbcQxGJMcRx6BEsp84BieS+4ljEiKpJ47JiGQ7cUxKJOvEMTmRPE4cfFUT
        Sb5uhkjEwQ9E8o04WCQScbBi5kjEwSYzRiIOqswUiTi4ywyRiINdXqeNGkltHC/T4CcjRiIODjVSJOLg
        FCNEIg5OFTkScdBExEjEQVORIhEHl4gQiTi4VG0k+fpWxEEXeoxEHHSlp0jEQZd6iEQcdO3KSMRBCFdE
        Ig5CqXlg90ZS87Xy/8wiDrrQIhJxENqZkYiDIZwRiTgYypGRiIMhHRGJOBjankjEwRTuiUQcTKU2EnEw
        nZpItkwcDOeoSMTBsPZGIg6Gd28k4mAatZGIg6ncE8irNBjenlcskTC0Iz6ki4Qh7Y2jTCQM56g4ykTC
        MGriyA9+3tK/3U4khFcbR/5Vbn7oRcLw7omjEAlD2xNHIRKGdEQchUgYypFxFCJhCGfEUYiE0M6MoxAJ
        IbWIoxAJobSMoxAJIVwRRyESunZlHIVI6FIPcRQioSs9xVGIhC7UxNH6LzuJhEv1HEchEi4RIY5CJDQV
        KY5CJDQRMY5CJJwqchyFSDjFCHEUIuFQI8VRiIRDjBhHIRJ2GTmOQiTcZYY4CpFQZaY4CpGwyYxxFCLh
        l2aOoxAJi8TxjUj4QW0cL9JGJxK+EsfjRDI5cawTyaTEsZ1IJiOOeiKZhDjuJ5LBiWM/kQxKHMcRyWDE
        cTyRDEIc5xFJcOI4n0iCEkc7IglGHO2JJAhxXEcknRPH9UTSKXH0QySdEUd/RNIJcfRLJBcTR/9EchFx
        xCGSxsQRj0gaEUdcIjmZOOITyUmep4ljDLWRPE1jxYe0pQO8nThiqInkbRorvqQtHd73E0csWyPJ17Di
        c9rS4ZWJI6YtkeR7y4p3aUuHlyeO2NYieZPGivxBbekQP6WJI77HIvmY9iSNDZ6lvU/Lr1v/pv2Z9lsa
        Y3B/AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgIYeHv4HWfavzVYRXuQAAAAASUVORK5CYII=
</value>
  </data>
</root>